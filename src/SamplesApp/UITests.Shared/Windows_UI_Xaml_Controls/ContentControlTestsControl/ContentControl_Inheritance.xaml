<UserControl x:Class="Uno.UI.Samples.Content.UITests.ContentControlTestsControl.ContentControl_Inheritance"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"	 
			 xmlns:local="using:Uno.UI.Samples.Content.UITests.ContentControlTests"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"	 
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:controls="using:Uno.UI.Samples.Controls"	
			 xmlns:u="using:Uno.UI.Samples.Controls"	
			 mc:Ignorable="d"
			 d:DesignHeight="1000" 
			 d:DesignWidth="600">
	<UserControl.Resources>
		<!--<Style TargetType="TextBlock">
			<Setter Property="Foreground" Value="Yellow" />
		</Style>-->
		<Style x:Key="explicitTextBlock" TargetType="TextBlock">
			<Setter Property="Foreground" Value="Green" />
		</Style>
		<Style x:Key="LocalButtonStyle"
                TargetType="Button">
			<Setter Property="HorizontalAlignment"
                           Value="Stretch" />
			<Setter Property="VerticalAlignment"
                           Value="Stretch" />
			<Setter Property="HorizontalContentAlignment"
                           Value="Center" />
			<Setter Property="VerticalContentAlignment"
                           Value="Center" />
			<Setter Property="FontWeight"
                           Value="Medium"/>
			<Setter Property="FontSize"
                           Value="12" />
			<Setter Property="Margin"
                           Value="0,20,0,0" />
			<Setter Property="MinHeight"
                           Value="45" />
			<Setter Property="MinWidth"
                           Value="40" />
			<Setter Property="Padding"
                           Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="Root"
                                              Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill"
                                                                           Storyboard.TargetName="PressedBackgroundBorder">
												<DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Green" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                           Storyboard.TargetName="Root">
												<DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Green" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}" />

							<ContentPresenter AutomationProperties.AccessibilityView="Raw"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />

							<Rectangle x:Name="PressedBackgroundBorder" 
                                       Fill="Transparent"/>

						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="NextButtonStyle"
		   TargetType="Button">
			<Setter Property="MinWidth"
				Value="60" />
			<Setter Property="MinHeight"
				Value="66" />
			<Setter Property="Background"
				Value="Transparent" />
			<Setter Property="BorderBrush"
				Value="Blue" />
			<Setter Property="BorderThickness"
				Value="0" />
			<Setter Property="Margin"
				Value="0" />
			<Setter Property="Padding"
				Value="0" />
			<Setter Property="HorizontalAlignment"
				Value="Left" />
			<Setter Property="VerticalAlignment"
				Value="Bottom" />
			<Setter Property="FontWeight"
				Value="Light" />
			<Setter Property="FontSize"
				Value="20" />
			<Setter Property="Foreground"
				Value="Blue" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
																		   Storyboard.TargetName="ContentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="Yellow" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill"
																		   Storyboard.TargetName="Path">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="Yellow" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Margin="0">
								<StackPanel Orientation="Horizontal"
											x:Name="ContentPresenterWrapper">
									<ContentPresenter x:Name="ContentPresenter"
													  AutomationProperties.AccessibilityView="Raw"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  Content="{TemplateBinding Content}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  Margin="{TemplateBinding Padding}"
													  VerticalAlignment="{TemplateBinding VerticalAlignment}" />
									<Path Data="F1M1.499,40.683C1.209,40.683 0.916,40.6 0.658,40.424 -0.027,39.959 -0.206,39.026 0.259,38.341L11.661,21.535C12.152,20.811,12.152,19.873,11.661,19.149L0.259,2.344C-0.206,1.658 -0.027,0.725 0.658,0.26 1.342,-0.206 2.277,-0.027 2.742,0.659L14.144,17.464C15.329,19.213,15.329,21.472,14.144,23.22L2.742,40.025C2.452,40.453,1.979,40.683,1.499,40.683"
										  x:Name="Path"
										  Height="32"
										  Width="12"
										  Stretch="Uniform"
										  VerticalAlignment="Bottom"
										  Fill="{TemplateBinding Foreground}"
										  Margin="20,0,0,10" />
								</StackPanel>
							</Border>
							<!--Suppress: NVX004-->
							<Border Background="Green"
									Visibility="Collapsed" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="NextButtonStyleCentered"
			   TargetType="Button" 
			   BasedOn="{StaticResource NextButtonStyle}">
			<Setter Property="HorizontalContentAlignment" 
					Value="Center" />
		</Style>

	</UserControl.Resources>

	<StackPanel Background="Gray">
		<TextBlock Text="Should be black" />
		<controls:SampleControl x:Name="sampleControl" 
								SampleDescription="Demonstrates the inheritance of ContentControl properties to its control children." 
								Foreground="Aqua">
			<controls:SampleControl.SampleContent>
				<DataTemplate>
					<StackPanel Name="InnerStackPanel">
						<TextBlock Text="Inherited is Aqua" 
								   Name="inheritedTextBlock" />
						<ContentControl Foreground="White">
							<StackPanel>
								<TextBlock Text="Inherited is White" />
								<TextBlock Text="Local is Purple" 
										   Foreground="Purple" />
								<TextBlock Text="Explicit is Green" 
										   Style="{StaticResource explicitTextBlock}" />
								<Button Style="{StaticResource LocalButtonStyle}" 
										Content="Foreground should be red" 
										Foreground="Red" 
										Background="DarkGray" />
								<Button Style="{StaticResource LocalButtonStyle}" 
										Foreground="Red" 
										Background="DarkGray">
									<TextBlock Text="Foreground should be red" />
								</Button>
								<Button Style="{StaticResource NextButtonStyle}" 
										Foreground="Red" 
										Background="DarkGray">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Should be Red" />
										<PathIcon Data="F1M1.499,40.683C1.209,40.683 0.916,40.6 0.658,40.424 -0.027,39.959 -0.206,39.026 0.259,38.341L11.661,21.535C12.152,20.811,12.152,19.873,11.661,19.149L0.259,2.344C-0.206,1.658 -0.027,0.725 0.658,0.26 1.342,-0.206 2.277,-0.027 2.742,0.659L14.144,17.464C15.329,19.213,15.329,21.472,14.144,23.22L2.742,40.025C2.452,40.453,1.979,40.683,1.499,40.683" />
									</StackPanel>
								</Button>
								<Button Content="Should be red"
										Style="{StaticResource NextButtonStyle}" 
										Foreground="Red" 
										Background="DarkGray">
								</Button>
								<Button Content="Should be red"
										Style="{StaticResource NextButtonStyle}" 
										Foreground="Red" 
										Background="DarkGray">
								</Button>
								<Button Style="{StaticResource NextButtonStyle}"
										Foreground="Red" 
										Background="DarkGray">
									<StackPanel>
										<TextBlock Text="Should be red" />
										<TextBlock Text="Should stay Green" 
												   Style="{StaticResource explicitTextBlock}" />
									</StackPanel>
								</Button>
								<Button Content="Should be white">
								</Button>
								<Button Style="{StaticResource NextButtonStyle}" 
										Foreground="Red" 
										Background="DarkGray">
									<StackPanel>
										<TextBlock Text="Should always be green even pressed" 
												   Style="{StaticResource explicitTextBlock}" />
									</StackPanel>
								</Button>

							</StackPanel>
						</ContentControl>
					</StackPanel>
				</DataTemplate>
			</controls:SampleControl.SampleContent>
		</controls:SampleControl>
	</StackPanel>
</UserControl>
